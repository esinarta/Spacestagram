{"version":3,"sources":["components/LikeButton.js","components/PhotoCard.js","App.js","index.js"],"names":["LikeButton","FormControlLabel","control","Checkbox","icon","checkedIcon","useStyles","makeStyles","theme","root","breakpoints","up","maxWidth","down","media","paddingTop","content","padding","description","marginLeft","expand","transform","transition","transitions","create","duration","shortest","expandText","cursor","userSelect","expandOpen","backgroundColor","errorText","color","textAlign","margin","PhotoCard","photo","classes","useState","expanded","setExpanded","Card","className","media_type","CardMedia","image","url","title","Typography","variant","CardActions","disableSpacing","CardContent","align","copyright","date","IconButton","disableRipple","onClick","clsx","Collapse","in","timeout","unmountOnExit","explanation","App","mode","setMode","useMemo","createTheme","palette","type","photos","setPhotos","loaded","setLoaded","getPhotos","useCallback","axios","method","process","then","res","data","catch","error","console","log","useEffect","ThemeProvider","CssBaseline","id","sx","ml","dataLength","next","hasMore","loader","CircularProgress","scrollThreshold","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe46c7d9.chunk.js","sourcesContent":["import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\nconst LikeButton = () => {\n return (\n  <FormControlLabel\n    control={\n      <Checkbox\n        icon={<FavoriteBorderIcon />}\n        checkedIcon={<FavoriteIcon />}\n      />\n    }\n  />\n )\n};\n\nexport default LikeButton;","import { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport LikeButton from '../components/LikeButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('md')]: {\n      maxWidth: \"40%\",\n    },\n    [theme.breakpoints.down('md')]: {\n      maxWidth: \"90%\",\n    },\n    margin: \"5% auto\",\n  },\n  media: {\n    paddingTop: \"100%\"\n  },\n  content: {\n    padding: \"2%\",\n  },\n  description: {\n    marginLeft: \"auto\"\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandText: {\n    cursor: \"pointer\",\n    userSelect: \"none\",\n    marginLeft: \"auto\",\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  icon: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    }\n  },\n  errorText: {\n    color: \"red\",\n    textAlign: \"center\",\n    margin: \"5%\",\n  }\n}));\n\nconst PhotoCard = ({ photo }) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n\n  const handleExpand = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.root}>\n      {photo.media_type === \"image\" ? \n        <CardMedia\n          className={classes.media}\n          image={photo.url}\n          title={photo.title}\n        />\n        :\n        <Typography className={classes.errorText} variant=\"body2\">\n          Error: Video cannot be played.\n        </Typography>\n      }\n      <CardActions disableSpacing>\n      </CardActions>\n      <CardContent className={classes.content}>\n        <Typography variant=\"h6\" align=\"left\">\n          {photo.title}\n        </Typography>\n        <Typography variant=\"body2\" align=\"left\">\n          {photo.copyright ? \n            <span>&copy; {photo.copyright}</span>\n            :\n            <span></span>\n          }\n        </Typography>\n        <Typography variant=\"body2\" align=\"left\">\n          <span>{photo.date}</span>\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton className={classes.icon} disableRipple>\n          <LikeButton />\n        </IconButton>\n        <IconButton \n          className={`${classes.description} ${classes.icon}`} \n          onClick={handleExpand}\n          disableRipple\n        >\n          <Typography variant=\"subtitle2\">\n              View description\n          </Typography>\n          <ExpandMoreIcon \n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded\n            })}\n          />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography variant=\"body2\" align=\"left\">\n            {photo.explanation}\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default PhotoCard;","import './App.css';\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport axios from 'axios';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport PhotoCard from './components/PhotoCard';\nimport { \n  createTheme, \n  ThemeProvider, \n  CssBaseline, \n  IconButton,\n  CircularProgress \n} from '@material-ui/core';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\n\nconst NASA_API_KEY = process.env.REACT_APP_NASA_API_KEY;\nconst NASA_APOD_URL = 'https://api.nasa.gov/planetary/apod';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  \n  const theme = useMemo(() => \n    createTheme({\n      palette: {\n        type: mode,\n      }\n    }), [mode]);\n\n  const [photos, setPhotos] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n\n  const getPhotos = useCallback(() => {\n    axios({\n      method: 'get',\n      url: `${NASA_APOD_URL}?api_key=${NASA_API_KEY}&count=10`\n    }).then(res => {\n      setPhotos(photos => [...photos, ...res.data]);\n      setLoaded(true);\n    }).catch(error => {\n      console.log(error);\n    })\n  }, []);\n\n  useEffect(() => {\n    getPhotos();\n  },[getPhotos]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div>\n        <header className=\"app-header\">\n          <div className=\"app-title-row\">\n            <h1 id=\"title\">Spacestagram</h1>\n            <IconButton\n              id=\"toggle-icon\"\n              sx={{ ml: 1 }} \n              onClick={\n                () => setMode(mode === \"light\" ? \"dark\" : \"light\")\n              } \n              color=\"inherit\"\n              disableRipple\n            >\n              {mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n            </IconButton>\n          </div>\n          <h2 id=\"subtitle\">Brought to you by NASA's Astronomy Photo of the Day (APOD) API</h2>\n        </header>\n        <body>\n          <InfiniteScroll\n            className=\"infinite-scroll\"\n            dataLength={photos}\n            next={() => {\n              getPhotos()\n            }}\n            hasMore={true}\n            loader={<CircularProgress id=\"progress\" />}\n            scrollThreshold={0.95}\n          >\n            {loaded ?\n              photos.map((photo, index) => (\n                <div key={index}>\n                  <PhotoCard photo={photo}/>\n                </div>\n              ))\n              : \"\"\n            }\n          </InfiniteScroll>\n        </body>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}